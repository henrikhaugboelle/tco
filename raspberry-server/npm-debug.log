0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '--production' ]
2 info using npm@1.2.14
3 info using node@v0.9.13-pre
4 verbose read json /home/hhau/tco/raspberry-server/package.json
5 warn package.json raspberry-server@0.0.1 No README.md file found!
6 verbose readDependencies using package.json deps
7 verbose install where, deps [ '/home/hhau/tco/raspberry-server',
7 verbose install   [ 'underscore', 'serialport' ] ]
8 verbose from cache /home/hhau/tco/raspberry-server/package.json
9 info preinstall raspberry-server@0.0.1
10 verbose read json /home/hhau/tco/raspberry-server/node_modules/underscore/package.json
11 verbose from cache /home/hhau/tco/raspberry-server/package.json
12 verbose readDependencies using package.json deps
13 verbose from cache /home/hhau/tco/raspberry-server/node_modules/underscore/package.json
14 verbose already installed skipping underscore@x.x.x /home/hhau/tco/raspberry-server
15 verbose cache add [ 'serialport@x.x.x', null ]
16 verbose cache add name=undefined spec="serialport@x.x.x" args=["serialport@x.x.x",null]
17 verbose parsed url { protocol: null,
17 verbose parsed url   slashes: null,
17 verbose parsed url   auth: null,
17 verbose parsed url   host: null,
17 verbose parsed url   port: null,
17 verbose parsed url   hostname: null,
17 verbose parsed url   hash: null,
17 verbose parsed url   search: null,
17 verbose parsed url   query: null,
17 verbose parsed url   pathname: 'serialport@x.x.x',
17 verbose parsed url   path: 'serialport@x.x.x',
17 verbose parsed url   href: 'serialport@x.x.x' }
18 verbose cache add name="serialport" spec="x.x.x" args=["serialport","x.x.x"]
19 verbose parsed url { protocol: null,
19 verbose parsed url   slashes: null,
19 verbose parsed url   auth: null,
19 verbose parsed url   host: null,
19 verbose parsed url   port: null,
19 verbose parsed url   hostname: null,
19 verbose parsed url   hash: null,
19 verbose parsed url   search: null,
19 verbose parsed url   query: null,
19 verbose parsed url   pathname: 'x.x.x',
19 verbose parsed url   path: 'x.x.x',
19 verbose parsed url   href: 'x.x.x' }
20 verbose addNamed [ 'serialport', 'x.x.x' ]
21 verbose addNamed [ null, '' ]
22 silly lockFile 0ee31e8c-serialport-x-x-x serialport@x.x.x
23 verbose lock serialport@x.x.x /home/hhau/.npm/0ee31e8c-serialport-x-x-x.lock
24 silly addNameRange { name: 'serialport', range: '', hasData: false }
25 verbose url raw serialport
26 verbose url resolving [ 'https://registry.npmjs.org/', './serialport' ]
27 verbose url resolved https://registry.npmjs.org/serialport
28 info trying registry request attempt 1 at 13:59:17
29 verbose etag "7K8SI31FEB5M96W3TGLP8WWZZ"
30 http GET https://registry.npmjs.org/serialport
31 http 304 https://registry.npmjs.org/serialport
32 silly registry.get cb [ 304,
32 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
32 silly registry.get     etag: '"7K8SI31FEB5M96W3TGLP8WWZZ"',
32 silly registry.get     date: 'Wed, 10 Apr 2013 11:59:19 GMT',
32 silly registry.get     'content-length': '0' } ]
33 verbose etag serialport from cache
34 silly addNameRange number 2 { name: 'serialport', range: '', hasData: true }
35 silly addNameRange versions [ 'serialport',
35 silly addNameRange   [ '0.1.0',
35 silly addNameRange     '0.1.1',
35 silly addNameRange     '0.1.3',
35 silly addNameRange     '0.2.0',
35 silly addNameRange     '0.2.2',
35 silly addNameRange     '0.2.3',
35 silly addNameRange     '0.2.4',
35 silly addNameRange     '0.2.5',
35 silly addNameRange     '0.2.6',
35 silly addNameRange     '0.2.7',
35 silly addNameRange     '0.2.8',
35 silly addNameRange     '0.2.9',
35 silly addNameRange     '0.3.0',
35 silly addNameRange     '0.6.0',
35 silly addNameRange     '0.6.1',
35 silly addNameRange     '0.6.2',
35 silly addNameRange     '0.6.3',
35 silly addNameRange     '0.6.5',
35 silly addNameRange     '0.6.6',
35 silly addNameRange     '0.6.7',
35 silly addNameRange     '0.7.0',
35 silly addNameRange     '0.7.1',
35 silly addNameRange     '0.7.2',
35 silly addNameRange     '0.7.3',
35 silly addNameRange     '0.7.4',
35 silly addNameRange     '0.7.5',
35 silly addNameRange     '1.0.0',
35 silly addNameRange     '1.0.1',
35 silly addNameRange     '1.0.2',
35 silly addNameRange     '1.0.3',
35 silly addNameRange     '1.0.4',
35 silly addNameRange     '1.0.5',
35 silly addNameRange     '1.0.6',
35 silly addNameRange     '1.0.7',
35 silly addNameRange     '1.0.8',
35 silly addNameRange     '1.1.0' ] ]
36 verbose addNamed [ 'serialport', '1.1.0' ]
37 verbose addNamed [ '1.1.0', '1.1.0' ]
38 silly lockFile 2854b428-serialport-1-1-0 serialport@1.1.0
39 verbose lock serialport@1.1.0 /home/hhau/.npm/2854b428-serialport-1-1-0.lock
40 verbose read json /home/hhau/.npm/serialport/1.1.0/package/package.json
41 silly lockFile 2854b428-serialport-1-1-0 serialport@1.1.0
42 silly lockFile 2854b428-serialport-1-1-0 serialport@1.1.0
43 silly lockFile 0ee31e8c-serialport-x-x-x serialport@x.x.x
44 silly lockFile 0ee31e8c-serialport-x-x-x serialport@x.x.x
45 silly resolved [ { name: 'serialport',
45 silly resolved     version: '1.1.0',
45 silly resolved     description: 'Welcome your robotic javascript overlords. Better yet, program them!',
45 silly resolved     author:
45 silly resolved      { name: 'Chris Williams',
45 silly resolved        email: 'voodootikigod@gmail.com',
45 silly resolved        url: 'http://www.voodootikigod.com' },
45 silly resolved     main: './serialport',
45 silly resolved     repository:
45 silly resolved      { type: 'git',
45 silly resolved        url: 'git://github.com/voodootikigod/node-serialport.git' },
45 silly resolved     maintainers: [ [Object], [Object] ],
45 silly resolved     dependencies:
45 silly resolved      { bindings: '1.1.0',
45 silly resolved        async: '0.1.18',
45 silly resolved        sf: '0.1.6',
45 silly resolved        optimist: '~0.3.4' },
45 silly resolved     devDependencies: { mocha: '*', chai: '*' },
45 silly resolved     engines: { node: '>= 0.7.0' },
45 silly resolved     bin:
45 silly resolved      { serialportlist: './bin/serialportList.js',
45 silly resolved        serialportterm: './bin/serialportTerminal.js' },
45 silly resolved     scripts:
45 silly resolved      { test: 'mocha -R spec -t 60s -s 60s',
45 silly resolved        install: 'node-gyp rebuild' },
45 silly resolved     gypfile: true,
45 silly resolved     contributors:
45 silly resolved      [ [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object],
45 silly resolved        [Object] ],
45 silly resolved     readme: '<pre>\n  eeeee eeeee eeeee eeee       e  eeeee \n  8   8 8  88 8   8 8          8  8   " \n  8e  8 8   8 8e  8 8eee       8e 8eeee \n  88  8 8   8 88  8 88      e  88    88 \n  88  8 8eee8 88ee8 88ee 88 8ee88 8ee88\n\n  eeeee eeee eeeee  e  eeeee e     eeeee eeeee eeeee eeeee \n  8   " 8    8   8  8  8   8 8     8   8 8  88 8   8   8   \n  8eeee 8eee 8eee8e 8e 8eee8 8e    8eee8 8   8 8eee8e  8e  \n     88 88   88   8 88 88  8 88    88    8   8 88   8  88  \n  8ee88 88ee 88   8 88 88  8 88eee 88    8eee8 88   8  88\n</pre>\n\nVersion: 1.1.0 - Released August 24, 2012 - Now with Windows Support!!!\n\n*****\n\nImagine a world where you can write JavaScript to control blenders, lights, security systems, or even robots. Yes, I said robots. That world is here and now with node-serialport. It provides a very simple interface to the low level serial port code necessary to program [Arduino](http://www.arduino.cc/) chipsets, [X10](http://www.smarthome.com/manuals/protocol.txt) wireless communications, or even the rising [Z-Wave](http://www.z-wave.com/modules/ZwaveStart/) and [Zigbee](http://www.zigbee.org/) standards. The physical world is your oyster with this goodie. For a full break down of why we made this, please read [NodeBots - The Rise of JS Robotics](http://www.voodootikigod.com/nodebots-the-rise-of-js-robotics).\n\n*****\n\nRobots, you say?\n================\n\nThis library is admittedly a base level toolkit for building amazing things with real world (including robots). Here are a couple of those amazing things that leverage node-serialport:\n\n* [firmata](https://github.com/jgautier/firmata) Talk natively to Arduino using the firmata protocol.\n* [tmpad](http://tmpvar.com/project/tmpad/) [source](https://github.com/tmpvar/tmpad) - a DIY midi pad using infrared, arduino, and nodejs. [Video](http://vimeo.com/34575470)\n* [duino](https://github.com/ecto/duino) - A higher level framework for working with Arduinos in node.js.\n* [Arduino Drinking Game Extravaganza](http://jsconf.eu/2011/arduino_drinking_game_extravaganza.html) - AKA "The Russian" a hexidecimal drinking game for geeks by Uxebu presented at JSConf EU 2011.\n* [Arduino controlling popcorn.js](https://gist.github.com/968773) - Controlling a popcorn.js video with an Arduino kit.\n* [Robotic JavaScript](http://jsconf.eu/2010/speaker/livingroombindmotion_function.html) - The first live presentation of the node-serialport code set as presented at JSConf EU 2010.\n* [devicestack](https://github.com/adrai/devicestack) - This module helps you to represent a device and its protocol.\n\nFor getting started with node-serialport, we recommend you begin with the following articles:\n\n* [Arduino Node Security Sensor Hacking](http://nexxylove.tumblr.com/post/20159263403/arduino-node-security-sensor-hacking) - A great all around "how do I use this" article.\n* [NodeBots - The Rise of JS Robotics](http://www.voodootikigod.com/nodebots-the-rise-of-js-robotics) - A survey article of why one would want to program robots in JS.\n* [Johnny-Five Getting Started Guide](https://github.com/rwldrn/johnny-five#setup-and-assemble-arduino) - Introduction to using the high level Johnny-Five library (awesome).\n\nHow To Use\n==========\n\nUsing node-serialport is pretty easy because it is pretty basic. It provides you with the building block to make great things, it is not a complete solution - just a cog in the (world domination) machine.\n\nTo Install\n----------\n\n<pre>\n  npm install serialport\n</pre>\n\nThis assumes you have everything on your system necessary to compile ANY native module for Node.js. This may not be the case, though, so please ensure the following are true for your system before filing an issue about "Does not install". For all operatings systems, please ensure you have Python 2.x installed AND not 3.0, node-gyp (what we use to compile) requires Python 2.x.\n\n### Windows:\n\nEnsure you have Visual Studio 2010 installed. If you have any version OTHER THAN VS 2010, please read this: https://github.com/TooTallNate/node-gyp/issues/44 \n\n### Mac OS X:\n\nEnsure that you have at a minimum the xCode Command Line Tools installed appropriate for your system configuration. If you recently upgrade OS, it probably removed your installation of Command Line Tools, please verify before submitting a ticket.\n\n### Linux:\n\nYou know what you need for you system, basically your appropriate analog of build-essential. Keep rocking!\n\n\nTo Use\n------\n\nOpening a serial port:\n\n<pre>\n  var SerialPort = require("serialport").SerialPort\n  var serialPort = new SerialPort("/dev/tty-usbserial1", {\n    baudrate: 57600\n  });\n</pre>\n  \nWhen opening a serial port, you can specify (in this order).\n\n1. Path to Serial Port - required.\n1. Options - optional and described below.\n\nThe options object allows you to pass named options to the serial port during initialization. The valid attributes for the options object are the following:\n\n* baudrate: Baud Rate, defaults to 9600. Must be one of: 115200, 57600, 38400, 19200, 9600, 4800, 2400, 1800, 1200, 600, 300, 200, 150, 134, 110, 75, or 50.\n* databits: Data Bits, defaults to 8. Must be one of: 8, 7, 6, or 5.\n* stopbits: Stop Bits, defaults to 1. Must be one of: 1 or 2.\n* parity: Parity, defaults to \'none\'. Must be one of: \'none\', \'even\', \'mark\', \'odd\', \'space\'\n* buffersize: Size of read buffer, defaults to 255. Must be an integer value.\n* parser: The parser engine to use with read data, defaults to rawPacket strategy which just emits the raw buffer as a "data" event. Can be any function that accepts EventEmitter as first parameter and the raw buffer as the second parameter.\n\n**Note, we have added support for either all lowercase OR camelcase of the options (thanks @jagautier), use whichever style you prefer.**\n\nopen event\n----------\n\nYou MUST wait for the open event to be emitted before reading/writing to the serial port. The open happens asynchronously so installing \'data\' listeners and writing \nbefore the open event might result in... nothing at all.\n\nAssuming you are connected to a serial console, you would for example:\n\n<pre>\nserialPort.on("open", function () {\n  console.log(\'open\');\n  serialPort.on(\'data\', function(data) {\n    console.log(\'data received: \' + data);\n  });  \n  serialPort.write("ls\\n", function(err, results) {\n    console.log(\'err \' + err);\n    console.log(\'results \' + results);\n  });  \n});\n</pre>\n\nYou can also call the open function, in this case instanciate the serialport with an additional flag.\n\n<pre>\nvar SerialPort = require("serialport").SerialPort\nvar serialPort = new SerialPort("/dev/tty-usbserial1", {\n  baudrate: 57600\n}, false); // this is the openImmediately flag [default is true]\n\nserialPort.open(function () {\n  console.log(\'open\');\n  serialPort.on(\'data\', function(data) {\n    console.log(\'data received: \' + data);\n  });  \n  serialPort.write("ls\\n", function(err, results) {\n    console.log(\'err \' + err);\n    console.log(\'results \' + results);\n  });  \n});\n</pre>\n\nList Ports\n----------\n\nYou can also list the ports along with some metadata as well.\n\n<pre>\n  serialport.list(function (err, ports) {\n    ports.forEach(function(port) {\n      console.log(port.comName);\n      console.log(port.pnpId);\n      console.log(port.manufacturer);\n    });\n  });\n</pre>\n\nParsers\n-------\n\nOut of the box, node-serialport provides two parsers one that simply emits the raw buffer as a data event and the other which provides familiar "readline" style parsing. To use the readline parser, you must provide a delimiter as such:\n\n<pre>\n  var serialport = require("serialport");\n  var SerialPort = serialport.SerialPort; // localize object constructor\n  \n  var sp = new SerialPort("/dev/tty-usbserial1", { \n    parser: serialport.parsers.readline("\\n") \n  });\n</pre>\n\nTo use the raw parser, you just provide the function definition (or leave undefined):\n\n<pre>\n  var serialport = require("serialport");\n  var SerialPort = serialport.SerialPort; // localize object constructor\n  \n  var sp = new SerialPort("/dev/tty-usbserial1", { \n    parser: serialport.parsers.raw\n  });\n</pre>\n\n\nYou can get updates of new data from the Serial Port as follows:\n\n<pre>\n  serialPort.on("data", function (data) {\n    sys.puts("here: "+data);\n  });\n</pre>\n\nYou can write to the serial port by sending a string or buffer to the write method as follows:\n\n<pre>\nserialPort.write("OMG IT WORKS\\r");\n</pre>\n\nEnjoy and do cool things with this code.\n\n',
45 silly resolved     readmeFilename: 'README.md',
45 silly resolved     _id: 'serialport@1.1.0',
45 silly resolved     _from: 'serialport@x.x.x' } ]
46 info install serialport@1.1.0 into /home/hhau/tco/raspberry-server
47 info installOne serialport@1.1.0
48 verbose from cache /home/hhau/.npm/serialport/1.1.0/package/package.json
49 info /home/hhau/tco/raspberry-server/node_modules/serialport unbuild
50 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/package.json
51 verbose tar unpack /home/hhau/.npm/serialport/1.1.0/package.tgz
52 silly lockFile 0b6c19ce-y-server-node-modules-serialport /home/hhau/tco/raspberry-server/node_modules/serialport
53 verbose lock /home/hhau/tco/raspberry-server/node_modules/serialport /home/hhau/.npm/0b6c19ce-y-server-node-modules-serialport.lock
54 silly lockFile c54fc115-npm-serialport-1-1-0-package-tgz /home/hhau/.npm/serialport/1.1.0/package.tgz
55 verbose lock /home/hhau/.npm/serialport/1.1.0/package.tgz /home/hhau/.npm/c54fc115-npm-serialport-1-1-0-package-tgz.lock
56 silly gunzTarPerm modes [ '755', '644' ]
57 silly gunzTarPerm extractEntry package.json
58 silly gunzTarPerm extractEntry .npmignore
59 silly gunzTarPerm extractEntry README.md
60 silly gunzTarPerm extractEntry LICENSE
61 silly gunzTarPerm extractEntry serialport.js
62 silly gunzTarPerm extractEntry binding.gyp
63 silly gunzTarPerm extractEntry build/Makefile
64 silly gunzTarPerm extractEntry build/Release/.deps/Release/obj.target/serialport/src/serialport.o.d
65 silly gunzTarPerm extractEntry build/Release/.deps/Release/obj.target/serialport/src/serialport_unix.o.d
66 silly gunzTarPerm extractEntry build/Release/.deps/Release/serialport.node.d
67 silly gunzTarPerm extractEntry build/Release/linker.lock
68 silly gunzTarPerm extractEntry build/Release/obj.target/serialport/src/serialport.o
69 silly gunzTarPerm extractEntry build/Release/obj.target/serialport/src/serialport_unix.o
70 silly gunzTarPerm extractEntry build/binding.Makefile
71 silly gunzTarPerm extractEntry build/config.gypi
72 silly gunzTarPerm extractEntry build/gyp-mac-tool
73 silly gunzTarPerm extractEntry build/serialport.target.mk
74 silly gunzTarPerm extractEntry AUTHORS
75 silly gunzTarPerm extractEntry examples/logger.js
76 silly gunzTarPerm extractEntry tests/arduino-ldr-read.js
77 silly gunzTarPerm extractEntry tests/echoTest.js
78 silly gunzTarPerm extractEntry tests/test_read.js
79 silly gunzTarPerm extractEntry tests/test_write.js
80 silly gunzTarPerm extractEntry tests/test_zwave.js
81 silly gunzTarPerm extractEntry tests/arduinioEcho/arduinioEcho.ino
82 silly gunzTarPerm extractEntry tests/arduino-ldr-read.pde
83 silly gunzTarPerm extractEntry bin/serialportList.js
84 silly gunzTarPerm extractEntry bin/serialportTerminal.js
85 silly gunzTarPerm extractEntry src/serialport.cpp
86 silly gunzTarPerm extractEntry src/serialport.h
87 silly gunzTarPerm extractEntry src/serialport_unix.cpp
88 silly gunzTarPerm extractEntry src/serialport_win.cpp
89 silly gunzTarPerm extractEntry src/win/disphelper.c
90 silly gunzTarPerm extractEntry src/win/disphelper.h
91 silly gunzTarPerm extractEntry src/win/enumser.cpp
92 silly gunzTarPerm extractEntry src/win/enumser.h
93 silly gunzTarPerm extractEntry src/win/stdafx.h
94 silly gunzTarPerm extractEntry test/echoTest.js
95 silly gunzTarPerm extractEntry test/echo/echo.ino
96 silly gunzTarPerm extractEntry changelog.md
97 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/package.json
98 silly lockFile 0b6c19ce-y-server-node-modules-serialport /home/hhau/tco/raspberry-server/node_modules/serialport
99 silly lockFile 0b6c19ce-y-server-node-modules-serialport /home/hhau/tco/raspberry-server/node_modules/serialport
100 silly lockFile c54fc115-npm-serialport-1-1-0-package-tgz /home/hhau/.npm/serialport/1.1.0/package.tgz
101 silly lockFile c54fc115-npm-serialport-1-1-0-package-tgz /home/hhau/.npm/serialport/1.1.0/package.tgz
102 info preinstall serialport@1.1.0
103 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/package.json
104 verbose readDependencies using package.json deps
105 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/package.json
106 verbose readDependencies using package.json deps
107 verbose cache add [ 'sf@0.1.6', null ]
108 verbose cache add name=undefined spec="sf@0.1.6" args=["sf@0.1.6",null]
109 verbose parsed url { protocol: null,
109 verbose parsed url   slashes: null,
109 verbose parsed url   auth: null,
109 verbose parsed url   host: null,
109 verbose parsed url   port: null,
109 verbose parsed url   hostname: null,
109 verbose parsed url   hash: null,
109 verbose parsed url   search: null,
109 verbose parsed url   query: null,
109 verbose parsed url   pathname: 'sf@0.1.6',
109 verbose parsed url   path: 'sf@0.1.6',
109 verbose parsed url   href: 'sf@0.1.6' }
110 verbose cache add name="sf" spec="0.1.6" args=["sf","0.1.6"]
111 verbose parsed url { protocol: null,
111 verbose parsed url   slashes: null,
111 verbose parsed url   auth: null,
111 verbose parsed url   host: null,
111 verbose parsed url   port: null,
111 verbose parsed url   hostname: null,
111 verbose parsed url   hash: null,
111 verbose parsed url   search: null,
111 verbose parsed url   query: null,
111 verbose parsed url   pathname: '0.1.6',
111 verbose parsed url   path: '0.1.6',
111 verbose parsed url   href: '0.1.6' }
112 verbose addNamed [ 'sf', '0.1.6' ]
113 verbose addNamed [ '0.1.6', '0.1.6' ]
114 silly lockFile cae65a0c-sf-0-1-6 sf@0.1.6
115 verbose lock sf@0.1.6 /home/hhau/.npm/cae65a0c-sf-0-1-6.lock
116 verbose cache add [ 'optimist@~0.3.4', null ]
117 verbose cache add name=undefined spec="optimist@~0.3.4" args=["optimist@~0.3.4",null]
118 verbose parsed url { protocol: null,
118 verbose parsed url   slashes: null,
118 verbose parsed url   auth: null,
118 verbose parsed url   host: null,
118 verbose parsed url   port: null,
118 verbose parsed url   hostname: null,
118 verbose parsed url   hash: null,
118 verbose parsed url   search: null,
118 verbose parsed url   query: null,
118 verbose parsed url   pathname: 'optimist@~0.3.4',
118 verbose parsed url   path: 'optimist@~0.3.4',
118 verbose parsed url   href: 'optimist@~0.3.4' }
119 verbose cache add name="optimist" spec="~0.3.4" args=["optimist","~0.3.4"]
120 verbose parsed url { protocol: null,
120 verbose parsed url   slashes: null,
120 verbose parsed url   auth: null,
120 verbose parsed url   host: null,
120 verbose parsed url   port: null,
120 verbose parsed url   hostname: null,
120 verbose parsed url   hash: null,
120 verbose parsed url   search: null,
120 verbose parsed url   query: null,
120 verbose parsed url   pathname: '~0.3.4',
120 verbose parsed url   path: '~0.3.4',
120 verbose parsed url   href: '~0.3.4' }
121 verbose addNamed [ 'optimist', '~0.3.4' ]
122 verbose addNamed [ null, '>=0.3.4- <0.4.0-' ]
123 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
124 verbose lock optimist@~0.3.4 /home/hhau/.npm/094c60bd-optimist-0-3-4.lock
125 silly addNameRange { name: 'optimist', range: '>=0.3.4- <0.4.0-', hasData: false }
126 verbose cache add [ 'bindings@1.1.0', null ]
127 verbose cache add name=undefined spec="bindings@1.1.0" args=["bindings@1.1.0",null]
128 verbose parsed url { protocol: null,
128 verbose parsed url   slashes: null,
128 verbose parsed url   auth: null,
128 verbose parsed url   host: null,
128 verbose parsed url   port: null,
128 verbose parsed url   hostname: null,
128 verbose parsed url   hash: null,
128 verbose parsed url   search: null,
128 verbose parsed url   query: null,
128 verbose parsed url   pathname: 'bindings@1.1.0',
128 verbose parsed url   path: 'bindings@1.1.0',
128 verbose parsed url   href: 'bindings@1.1.0' }
129 verbose cache add name="bindings" spec="1.1.0" args=["bindings","1.1.0"]
130 verbose parsed url { protocol: null,
130 verbose parsed url   slashes: null,
130 verbose parsed url   auth: null,
130 verbose parsed url   host: null,
130 verbose parsed url   port: null,
130 verbose parsed url   hostname: null,
130 verbose parsed url   hash: null,
130 verbose parsed url   search: null,
130 verbose parsed url   query: null,
130 verbose parsed url   pathname: '1.1.0',
130 verbose parsed url   path: '1.1.0',
130 verbose parsed url   href: '1.1.0' }
131 verbose addNamed [ 'bindings', '1.1.0' ]
132 verbose addNamed [ '1.1.0', '1.1.0' ]
133 silly lockFile ff2d1960-bindings-1-1-0 bindings@1.1.0
134 verbose lock bindings@1.1.0 /home/hhau/.npm/ff2d1960-bindings-1-1-0.lock
135 verbose cache add [ 'async@0.1.18', null ]
136 verbose cache add name=undefined spec="async@0.1.18" args=["async@0.1.18",null]
137 verbose parsed url { protocol: null,
137 verbose parsed url   slashes: null,
137 verbose parsed url   auth: null,
137 verbose parsed url   host: null,
137 verbose parsed url   port: null,
137 verbose parsed url   hostname: null,
137 verbose parsed url   hash: null,
137 verbose parsed url   search: null,
137 verbose parsed url   query: null,
137 verbose parsed url   pathname: 'async@0.1.18',
137 verbose parsed url   path: 'async@0.1.18',
137 verbose parsed url   href: 'async@0.1.18' }
138 verbose cache add name="async" spec="0.1.18" args=["async","0.1.18"]
139 verbose parsed url { protocol: null,
139 verbose parsed url   slashes: null,
139 verbose parsed url   auth: null,
139 verbose parsed url   host: null,
139 verbose parsed url   port: null,
139 verbose parsed url   hostname: null,
139 verbose parsed url   hash: null,
139 verbose parsed url   search: null,
139 verbose parsed url   query: null,
139 verbose parsed url   pathname: '0.1.18',
139 verbose parsed url   path: '0.1.18',
139 verbose parsed url   href: '0.1.18' }
140 verbose addNamed [ 'async', '0.1.18' ]
141 verbose addNamed [ '0.1.18', '0.1.18' ]
142 silly lockFile b86dcd49-async-0-1-18 async@0.1.18
143 verbose lock async@0.1.18 /home/hhau/.npm/b86dcd49-async-0-1-18.lock
144 verbose url raw sf/0.1.6
145 verbose url resolving [ 'https://registry.npmjs.org/', './sf/0.1.6' ]
146 verbose url resolved https://registry.npmjs.org/sf/0.1.6
147 info trying registry request attempt 1 at 13:59:18
148 verbose etag "BKA0IQHA0SE4JCOU11MXHNEHK"
149 http GET https://registry.npmjs.org/sf/0.1.6
150 verbose url raw optimist
151 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
152 verbose url resolved https://registry.npmjs.org/optimist
153 info trying registry request attempt 1 at 13:59:18
154 verbose etag "DLEBSHBFEQLANMLJXWBR48CQT"
155 http GET https://registry.npmjs.org/optimist
156 verbose url raw bindings/1.1.0
157 verbose url resolving [ 'https://registry.npmjs.org/', './bindings/1.1.0' ]
158 verbose url resolved https://registry.npmjs.org/bindings/1.1.0
159 info trying registry request attempt 1 at 13:59:18
160 verbose etag "4NYLBD9FONZAZA2PMGUSX6925"
161 http GET https://registry.npmjs.org/bindings/1.1.0
162 verbose url raw async/0.1.18
163 verbose url resolving [ 'https://registry.npmjs.org/', './async/0.1.18' ]
164 verbose url resolved https://registry.npmjs.org/async/0.1.18
165 info trying registry request attempt 1 at 13:59:18
166 verbose etag "CVQO4RK6OH9PWHFFSND22FN3T"
167 http GET https://registry.npmjs.org/async/0.1.18
168 http 304 https://registry.npmjs.org/sf/0.1.6
169 silly registry.get cb [ 304,
169 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
169 silly registry.get     etag: '"BKA0IQHA0SE4JCOU11MXHNEHK"',
169 silly registry.get     date: 'Wed, 10 Apr 2013 11:59:20 GMT',
169 silly registry.get     'content-length': '0' } ]
170 verbose etag sf/0.1.6 from cache
171 verbose read json /home/hhau/.npm/sf/0.1.6/package/package.json
172 silly lockFile cae65a0c-sf-0-1-6 sf@0.1.6
173 silly lockFile cae65a0c-sf-0-1-6 sf@0.1.6
174 http 304 https://registry.npmjs.org/async/0.1.18
175 silly registry.get cb [ 304,
175 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
175 silly registry.get     etag: '"CVQO4RK6OH9PWHFFSND22FN3T"',
175 silly registry.get     date: 'Wed, 10 Apr 2013 11:59:20 GMT',
175 silly registry.get     'content-length': '0' } ]
176 verbose etag async/0.1.18 from cache
177 verbose read json /home/hhau/.npm/async/0.1.18/package/package.json
178 silly lockFile b86dcd49-async-0-1-18 async@0.1.18
179 silly lockFile b86dcd49-async-0-1-18 async@0.1.18
180 http 304 https://registry.npmjs.org/optimist
181 silly registry.get cb [ 304,
181 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
181 silly registry.get     etag: '"DLEBSHBFEQLANMLJXWBR48CQT"',
181 silly registry.get     date: 'Wed, 10 Apr 2013 11:59:20 GMT',
181 silly registry.get     'content-length': '0' } ]
182 verbose etag optimist from cache
183 http 304 https://registry.npmjs.org/bindings/1.1.0
184 silly registry.get cb [ 304,
184 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
184 silly registry.get     etag: '"4NYLBD9FONZAZA2PMGUSX6925"',
184 silly registry.get     date: 'Wed, 10 Apr 2013 11:59:20 GMT',
184 silly registry.get     'content-length': '0' } ]
185 verbose etag bindings/1.1.0 from cache
186 silly addNameRange number 2 { name: 'optimist', range: '>=0.3.4- <0.4.0-', hasData: true }
187 silly addNameRange versions [ 'optimist',
187 silly addNameRange   [ '0.0.1',
187 silly addNameRange     '0.0.2',
187 silly addNameRange     '0.0.4',
187 silly addNameRange     '0.0.5',
187 silly addNameRange     '0.0.6',
187 silly addNameRange     '0.0.7',
187 silly addNameRange     '0.1.0',
187 silly addNameRange     '0.1.1',
187 silly addNameRange     '0.1.2',
187 silly addNameRange     '0.1.3',
187 silly addNameRange     '0.1.4',
187 silly addNameRange     '0.1.5',
187 silly addNameRange     '0.1.6',
187 silly addNameRange     '0.1.7',
187 silly addNameRange     '0.1.8',
187 silly addNameRange     '0.1.9',
187 silly addNameRange     '0.0.3',
187 silly addNameRange     '0.2.0',
187 silly addNameRange     '0.2.1',
187 silly addNameRange     '0.2.2',
187 silly addNameRange     '0.2.3',
187 silly addNameRange     '0.2.4',
187 silly addNameRange     '0.2.5',
187 silly addNameRange     '0.2.6',
187 silly addNameRange     '0.2.7',
187 silly addNameRange     '0.2.8',
187 silly addNameRange     '0.3.0',
187 silly addNameRange     '0.3.1',
187 silly addNameRange     '0.3.3',
187 silly addNameRange     '0.3.4',
187 silly addNameRange     '0.3.5',
187 silly addNameRange     '0.3.6',
187 silly addNameRange     '0.3.7' ] ]
188 verbose addNamed [ 'optimist', '0.3.7' ]
189 verbose addNamed [ '0.3.7', '0.3.7' ]
190 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
191 verbose lock optimist@0.3.7 /home/hhau/.npm/090e1d8d-optimist-0-3-7.lock
192 verbose read json /home/hhau/.npm/bindings/1.1.0/package/package.json
193 verbose read json /home/hhau/.npm/optimist/0.3.7/package/package.json
194 silly lockFile ff2d1960-bindings-1-1-0 bindings@1.1.0
195 silly lockFile ff2d1960-bindings-1-1-0 bindings@1.1.0
196 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
197 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
198 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
199 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
200 silly resolved [ { name: 'sf',
200 silly resolved     description: 'String formatting library for node.js',
200 silly resolved     author: { name: 'Joe Ferner', email: 'joe.ferner@nearinfinity.com' },
200 silly resolved     keywords: [ 'string', 'format', 'template' ],
200 silly resolved     version: '0.1.6',
200 silly resolved     engines: { node: '>=0.6.0' },
200 silly resolved     maintainers: [ [Object] ],
200 silly resolved     bugs: { url: 'https://github.com/nearinfinity/node-sf/issues' },
200 silly resolved     license: 'MIT',
200 silly resolved     repository:
200 silly resolved      { type: 'git',
200 silly resolved        url: 'https://github.com/nearinfinity/node-sf.git' },
200 silly resolved     devDependencies: { nodeunit: '~0.7.3', 'timezone-js': '~0.4.3' },
200 silly resolved     scripts: { test: 'nodeunit test' },
200 silly resolved     main: './index.js',
200 silly resolved     readme: '# sf\n\n[![Build Status](https://secure.travis-ci.org/nearinfinity/node-sf.png)](http://travis-ci.org/nearinfinity/node-sf)\n\nString formatting library for node.js.\n\n## Installation\n\n```bash\n$ npm install sf\n```\n\n## Quick Examples\n\n```javascript\nvar sf = require("sf");\n\nsf("{who} has a {what}", { who: \'dog\', what: \'tail\' });\n// returns: dog has a tail\n\nsf("{0} has a {1}", \'dog\', \'tail\');\n// returns: dog has a tail\n\nsf("{0:#,##0.00}", 2123.1);\n// returns: 2,123.10\n\nsf("{0,15:#,##0.00}", 2123.1);\n// returns:        2,123.10\n\nsf("{a.b}", { a: { b: \'test\' }});\n// returns: test\n\nsf("{a.z.c}", { a: { b: \'test\' }});\n// throws an error\n\nsf("{a.?z.?c}", { a: { b: \'test\' }});\n// returns:\n\nsf("{a[0]}", { a: [ \'foo\', \'bar\' ]});\n// returns: foo\n\nsf("{a[-1]}", { a: [ \'foo\', \'bar\' ]});\n// returns: bar\n\nsf.log("{who} has a {what}", { who: \'dog\', what: \'tail\' });\n// outputs to standard out: dog has a tail\n\nsf("{0:^d \'Days,\' h:mm:ss.fff}", new sf.TimeSpan(8173818181));\n// returns: 94 Days, 14:30:18.181\n```\n\n## Format Specifiers\n\nThe format is similar to C#\'s string.format. The text inside the curly braces is {indexOrName[,alignment][:formatString]}.\nIf alignment is positive the text is right aligned. If alignment is negative it will be left aligned.\n\n### Object\n\n| Specifier | Name                         |\n|-----------|------------------------------|\n| json      | JSON.stringify               |\n| inspect   | util.inspect                 |\n\n### Numbers\n\n| Specifier | Name                         | Example          | Output         |\n|-----------|------------------------------|------------------|----------------|\n| 0         | Zero placeholder             | {0:00.0000}      | 02.1200        |\n| #         | Digit placeholder            | {0:#,###}        | 1,234          |\n| x         | Lowercase hex                | {0:x4}           | 01fc           |\n| X         | Uppercase hex                | {0:X4}           | 01FC           |\n\n### Dates\n\n| Specifier | Name                            | Example                         |\n|-----------|---------------------------------|---------------------------------|\n| sd        | Short date                      | 10/12/2002                      |\n| D         | Long date                       | December 10, 2002               |\n| t         | Short time                      | 10:11 PM                        |\n| T         | Long time                       | 10:11:29 PM                     |\n| fdt       | Full date & time                | December 10, 2002 10:11 PM      |\n| F         | Full date & time (long)         | December 10, 2002 10:11:29 PM   |\n| g         | Default date & time             | 10/12/2002 10:11 PM             |\n| G         | Default date & time (long)      | 10/12/2002 10:11:29 PM          |\n| md        | Month day pattern               | December 10                     |\n| r         | RFC1123 date string             | Tue, 10 Dec 2002 22:11:29 +0500 |\n| s         | Sortable date string            | 2002-12-10T22:11:29             |\n| d         | Date single digit               | 1                               |\n| dd        | Date leading zero               | 01                              |\n| ddd       | Short day name                  | Mon                             |\n| dddd      | Long day name                   | Monday                          |\n| f         | Fraction of second (1 digit)    | 1                               |\n| ff        | Fraction of second (2 digit)    | 24                              |\n| fff       | Fraction of second (3 digit)    | 345                             |\n| h         | Hour 12-hour format 1 digit     | 5                               |\n| hh        | Hour 12-hour format 2 digits    | 05                              |\n| H         | Hour 24-hour format 1 digit     | 5                               |\n| HH        | Hour 24-hour format 2 digits    | 05                              |\n| mm        | Minutes 2 digits                | 23                              |\n| M         | Month single digit              | 2                               |\n| MM        | Month leading zero              | 02                              |\n| MMM       | Month short name                | Feb                             |\n| MMMM      | Month long name                 | February                        |\n| ss        | Seconds 2 digits                | 54                              |\n| tt        | AM/PM                           | AM                              |\n| yy        | Year 2 digits                   | 12                              |\n| yyyy      | Year 4 digits                   | 2012                            |\n| zz        | Time zone offset                | 05                              |\n| +zz       | Time zone offset leading +      | +05                             |\n| zzz       | Time zone offset full           | 05:00                           |\n| zzzz      | Time zone offset full           | 0500                            |\n| +zzzz     | Time zone offset full leading + | +0500                           |\n\n### sf.TimeSpan\n\n| Specifier | Name                | Example                |\n|-----------|---------------------|------------------------|\n| y         | Years               | 2                      |\n| M         | Months              | 6                      |\n| d         | Days                | 8                      |\n| h         | Hours               | 10                     |\n| m         | Minutes             | 15                     |\n| s         | Seconds             | 5                      |\n| f         | Fraction of Seconds | 9                      |\n\nIf you prefix the specifier with \'^\' you will get the total number of that value. For\nexample \'^s\' will output the total number of seconds in the time span. Where as \'s\' will\nonly output the number of seconds in a minute.\n\nIf you repeat characters the value will be prefixed with zeros.\n\n## sf.indent(str, options)\n\nHelper function to word wrap and indent a string.\n\n__Arguments__\n\n * str - The string to indent and wrap.\n * options\n  * prefix - The prefix to appear at the beginning of each new line.\n  * wordwrap - The maximum length of each line.\n\n## Helper Functions\n\n * sf.log(formatString [, args...]);\n * sf.info(formatString [, args...]);\n * sf.warn(formatString [, args...]);\n * sf.error(formatString [, args...]);\n',
200 silly resolved     readmeFilename: 'README.md',
200 silly resolved     _id: 'sf@0.1.6',
200 silly resolved     _from: 'sf@0.1.6' },
200 silly resolved   { name: 'async',
200 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
200 silly resolved     main: './index',
200 silly resolved     author: { name: 'Caolan McMahon' },
200 silly resolved     version: '0.1.18',
200 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
200 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
200 silly resolved     licenses: [ [Object] ],
200 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
200 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n    async.parallel([\n        function(){ ... },\n        function(){ ... }\n    ], callback);\n\n    async.series([\n        function(){ ... },\n        function(){ ... }\n    ]);\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n    <script type="text/javascript" src="async.js"></script>\n    <script type="text/javascript">\n\n        async.map(data, asyncProcess, function(err, results){\n            alert(results);\n        });\n\n    </script>\n\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [until](#until)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // assuming openFiles is an array of file names and saveFile is a function\n    // to save the modified contents of that file:\n\n    async.forEach(openFiles, saveFile, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // Assume documents is an array of JSON objects and requestApi is a\n    // function that interacts with a rate-limited REST api.\n\n    async.forEachLimit(documents, 20, requestApi, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as filter, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n    async.reduce([1,2,3], 0, function(memo, item, callback){\n        // pointless async:\n        process.nextTick(function(){\n            callback(null, memo + item)\n        });\n    }, function(err, result){\n        // result is now equal to the last value of memo, which is 6\n    });\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n    async.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // result now equals the first file in the list that exists\n    });\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n    async.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n        fs.stat(file, function(err, stats){\n            callback(err, stats.mtime);\n        });\n    }, function(err, results){\n        // results is now the original array of files sorted by\n        // modified date\n    });\n\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n    async.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then at least one of the files exists\n    });\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n    async.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then every file exists\n    });\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n    async.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n        // files is now a list of filenames that exist in the 3 directories\n    });\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.series([\n        function(callback){\n            // do some stuff ...\n            callback(null, \'one\');\n        },\n        function(callback){\n            // do some more stuff ...\n            callback(null, \'two\');\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // results is now equal to [\'one\', \'two\']\n    });\n\n\n    // an example using an object instead of an array\n    async.series({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equal to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.parallel([\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'one\');\n            }, 200);\n        },\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'two\');\n            }, 100);\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // in this case, the results array will equal [\'two\',\'one\']\n        // because the functions were run in parallel and the second\n        // function had a shorter timeout before calling the callback.\n    });\n\n\n    // an example using an object instead of an array\n    async.parallel({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equals to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n    var count = 0;\n\n    async.whilst(\n        function () { return count < 5; },\n        function (callback) {\n            count++;\n            setTimeout(callback, 1000);\n        },\n        function (err) {\n            // 5 seconds have passed\n        }\n    );\n\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n    async.waterfall([\n        function(callback){\n            callback(null, \'one\', \'two\');\n        },\n        function(arg1, arg2, callback){\n            callback(null, \'three\');\n        },\n        function(arg1, callback){\n            // arg1 now equals \'three\'\n            callback(null, \'done\');\n        }\n    ], function (err, result) {\n       // result now equals \'done\'    \n    });\n\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n    // create a queue object with concurrency 2\n\n    var q = async.queue(function (task, callback) {\n        console.log(\'hello \' + task.name);\n        callback();\n    }, 2);\n\n\n    // assign a callback\n    q.drain = function() {\n        console.log(\'all items have been processed\');\n    }\n\n    // add some items to the queue\n\n    q.push({name: \'foo\'}, function (err) {\n        console.log(\'finished processing foo\');\n    });\n    q.push({name: \'bar\'}, function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n    // add some items to the queue (batch-wise)\n\n    q.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n    async.auto({\n        get_data: function(callback){\n            // async code to get some data\n        },\n        make_folder: function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        },\n        write_file: [\'get_data\', \'make_folder\', function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            callback(null, filename);\n        }],\n        email_link: [\'write_file\', function(callback, results){\n            // once the file is written let\'s email a link to it...\n            // results.write_file contains the filename returned by write_file.\n        }]\n    });\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n    async.parallel([\n        function(callback){\n            // async code to get some data\n        },\n        function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        }\n    ],\n    function(results){\n        async.series([\n            function(callback){\n                // once there is some data and the directory exists,\n                // write the data to a file in the directory\n            },\n            email_link: function(callback){\n                // once the file is written let\'s email a link to it...\n            }\n        ]);\n    });\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n    var iterator = async.iterator([\n        function(){ sys.p(\'one\'); },\n        function(){ sys.p(\'two\'); },\n        function(){ sys.p(\'three\'); }\n    ]);\n\n    node> var iterator2 = iterator();\n    \'one\'\n    node> var iterator3 = iterator2();\n    \'two\'\n    node> iterator3();\n    \'three\'\n    node> var nextfn = iterator2.next();\n    node> nextfn();\n    \'three\'\n\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n    // using apply\n\n    async.parallel([\n        async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n        async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n    ]);\n\n\n    // the same process without using apply\n\n    async.parallel([\n        function(callback){\n            fs.writeFile(\'testfile1\', \'test1\', callback);\n        },\n        function(callback){\n            fs.writeFile(\'testfile2\', \'test2\', callback);\n        },\n    ]);\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n    node> var fn = async.apply(sys.puts, \'one\');\n    node> fn(\'two\', \'three\');\n    one\n    two\n    three\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\nwhich means other higher priority events may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n    var call_order = [];\n    async.nextTick(function(){\n        call_order.push(\'two\');\n        // call_order now equals [\'one\',\'two]\n    });\n    call_order.push(\'one\')\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n    var slow_fn = function (name, callback) {\n        // do something\n        callback(null, result);\n    };\n    var fn = async.memoize(slow_fn);\n\n    // fn can now be used as if it were slow_fn\n    fn(\'some name\', function () {\n        // callback\n    });\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, \'hello \' + name);\n        }, 1000);\n    };\n\n    node> async.log(hello, \'world\');\n    \'hello world\'\n\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, {hello: name});\n        }, 1000);\n    };\n\n    node> async.dir(hello, \'world\');\n    {hello: \'world\'}\n\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
200 silly resolved     readmeFilename: 'README.md',
200 silly resolved     _id: 'async@0.1.18',
200 silly resolved     _from: 'async@0.1.18' },
200 silly resolved   { name: 'bindings',
200 silly resolved     description: 'Helper module for loading your native module\'s .node file',
200 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
200 silly resolved     version: '1.1.0',
200 silly resolved     author:
200 silly resolved      { name: 'Nathan Rajlich',
200 silly resolved        email: 'nathan@tootallnate.net',
200 silly resolved        url: 'http://tootallnate.net' },
200 silly resolved     repository:
200 silly resolved      { type: 'git',
200 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
200 silly resolved     main: './bindings.js',
200 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
200 silly resolved     readmeFilename: 'README.md',
200 silly resolved     _id: 'bindings@1.1.0',
200 silly resolved     _from: 'bindings@1.1.0' },
200 silly resolved   { name: 'optimist',
200 silly resolved     version: '0.3.7',
200 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
200 silly resolved     main: './index.js',
200 silly resolved     dependencies: { wordwrap: '~0.0.2' },
200 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
200 silly resolved     scripts: { test: 'tap ./test/*.js' },
200 silly resolved     repository:
200 silly resolved      { type: 'git',
200 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
200 silly resolved     keywords:
200 silly resolved      [ 'argument',
200 silly resolved        'args',
200 silly resolved        'option',
200 silly resolved        'parser',
200 silly resolved        'parsing',
200 silly resolved        'cli',
200 silly resolved        'command' ],
200 silly resolved     author:
200 silly resolved      { name: 'James Halliday',
200 silly resolved        email: 'mail@substack.net',
200 silly resolved        url: 'http://substack.net' },
200 silly resolved     license: 'MIT/X11',
200 silly resolved     engine: { node: '>=0.4' },
200 silly resolved     readme: 'optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
200 silly resolved     readmeFilename: 'readme.markdown',
200 silly resolved     _id: 'optimist@0.3.7',
200 silly resolved     _from: 'optimist@~0.3.4' } ]
201 info install sf@0.1.6 into /home/hhau/tco/raspberry-server/node_modules/serialport
202 info install async@0.1.18 into /home/hhau/tco/raspberry-server/node_modules/serialport
203 info install bindings@1.1.0 into /home/hhau/tco/raspberry-server/node_modules/serialport
204 info install optimist@0.3.7 into /home/hhau/tco/raspberry-server/node_modules/serialport
205 info installOne sf@0.1.6
206 info installOne async@0.1.18
207 info installOne bindings@1.1.0
208 info installOne optimist@0.3.7
209 verbose from cache /home/hhau/.npm/sf/0.1.6/package/package.json
210 info /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf unbuild
211 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf/package.json
212 verbose from cache /home/hhau/.npm/async/0.1.18/package/package.json
213 info /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async unbuild
214 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async/package.json
215 verbose from cache /home/hhau/.npm/bindings/1.1.0/package/package.json
216 info /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings unbuild
217 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings/package.json
218 verbose from cache /home/hhau/.npm/optimist/0.3.7/package/package.json
219 info /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist unbuild
220 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/package.json
221 verbose tar unpack /home/hhau/.npm/sf/0.1.6/package.tgz
222 silly lockFile f574cc5a-dules-serialport-node-modules-sf /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf
223 verbose lock /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf /home/hhau/.npm/f574cc5a-dules-serialport-node-modules-sf.lock
224 silly lockFile 40fe865f-me-hhau-npm-sf-0-1-6-package-tgz /home/hhau/.npm/sf/0.1.6/package.tgz
225 verbose lock /home/hhau/.npm/sf/0.1.6/package.tgz /home/hhau/.npm/40fe865f-me-hhau-npm-sf-0-1-6-package-tgz.lock
226 verbose tar unpack /home/hhau/.npm/async/0.1.18/package.tgz
227 silly lockFile bdfa0913-es-serialport-node-modules-async /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async
228 verbose lock /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async /home/hhau/.npm/bdfa0913-es-serialport-node-modules-async.lock
229 silly lockFile 2b212828-hau-npm-async-0-1-18-package-tgz /home/hhau/.npm/async/0.1.18/package.tgz
230 verbose lock /home/hhau/.npm/async/0.1.18/package.tgz /home/hhau/.npm/2b212828-hau-npm-async-0-1-18-package-tgz.lock
231 verbose tar unpack /home/hhau/.npm/bindings/1.1.0/package.tgz
232 silly lockFile ff441d61-serialport-node-modules-bindings /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings
233 verbose lock /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings /home/hhau/.npm/ff441d61-serialport-node-modules-bindings.lock
234 silly lockFile cf385771-u-npm-bindings-1-1-0-package-tgz /home/hhau/.npm/bindings/1.1.0/package.tgz
235 verbose lock /home/hhau/.npm/bindings/1.1.0/package.tgz /home/hhau/.npm/cf385771-u-npm-bindings-1-1-0-package-tgz.lock
236 verbose tar unpack /home/hhau/.npm/optimist/0.3.7/package.tgz
237 silly lockFile 675579a5-serialport-node-modules-optimist /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist
238 verbose lock /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist /home/hhau/.npm/675579a5-serialport-node-modules-optimist.lock
239 silly lockFile 3312ec71-u-npm-optimist-0-3-7-package-tgz /home/hhau/.npm/optimist/0.3.7/package.tgz
240 verbose lock /home/hhau/.npm/optimist/0.3.7/package.tgz /home/hhau/.npm/3312ec71-u-npm-optimist-0-3-7-package-tgz.lock
241 silly gunzTarPerm modes [ '755', '644' ]
242 silly gunzTarPerm modes [ '755', '644' ]
243 silly gunzTarPerm modes [ '755', '644' ]
244 silly gunzTarPerm modes [ '755', '644' ]
245 silly gunzTarPerm extractEntry package.json
246 silly gunzTarPerm extractEntry package.json
247 silly gunzTarPerm extractEntry package.json
248 silly gunzTarPerm extractEntry package.json
249 silly gunzTarPerm extractEntry .npmignore
250 silly gunzTarPerm extractEntry README.md
251 silly gunzTarPerm extractEntry .npmignore
252 silly gunzTarPerm extractEntry README.md
253 silly gunzTarPerm extractEntry README.md
254 silly gunzTarPerm extractEntry bindings.js
255 silly gunzTarPerm extractEntry LICENSE
256 silly gunzTarPerm extractEntry index.js
257 silly gunzTarPerm extractEntry index.js
258 silly gunzTarPerm extractEntry .travis.yml
259 silly gunzTarPerm extractEntry LICENSE
260 silly gunzTarPerm extractEntry .travis.yml
261 silly gunzTarPerm extractEntry lib/stringFormat.js
262 silly gunzTarPerm extractEntry test/indentTest.js
263 silly gunzTarPerm extractEntry test/stringFormatTest.js
264 silly gunzTarPerm extractEntry test/timeSpanTest.js
265 silly gunzTarPerm extractEntry index.js
266 silly gunzTarPerm extractEntry .gitmodules
267 silly gunzTarPerm extractEntry example/bool.js
268 silly gunzTarPerm extractEntry example/default_singles.js
269 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings/package.json
270 silly lockFile ff441d61-serialport-node-modules-bindings /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings
271 silly lockFile ff441d61-serialport-node-modules-bindings /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings
272 silly lockFile cf385771-u-npm-bindings-1-1-0-package-tgz /home/hhau/.npm/bindings/1.1.0/package.tgz
273 silly lockFile cf385771-u-npm-bindings-1-1-0-package-tgz /home/hhau/.npm/bindings/1.1.0/package.tgz
274 info preinstall bindings@1.1.0
275 silly gunzTarPerm extractEntry example/divide.js
276 silly gunzTarPerm extractEntry example/line_count.js
277 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings/package.json
278 verbose readDependencies using package.json deps
279 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings/package.json
280 verbose readDependencies using package.json deps
281 silly resolved []
282 verbose about to build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings
283 info build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings
284 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/bindings/package.json
285 verbose linkStuff [ false,
285 verbose linkStuff   false,
285 verbose linkStuff   false,
285 verbose linkStuff   '/home/hhau/tco/raspberry-server/node_modules/serialport/node_modules' ]
286 info linkStuff bindings@1.1.0
287 verbose linkBins bindings@1.1.0
288 verbose linkMans bindings@1.1.0
289 verbose rebuildBundles bindings@1.1.0
290 info install bindings@1.1.0
291 info postinstall bindings@1.1.0
292 silly gunzTarPerm extractEntry example/default_hash.js
293 silly gunzTarPerm extractEntry example/line_count_wrap.js
294 silly gunzTarPerm extractEntry example/nonopt.js
295 silly gunzTarPerm extractEntry example/reflect.js
296 silly gunzTarPerm extractEntry example/short.js
297 silly gunzTarPerm extractEntry example/string.js
298 silly gunzTarPerm extractEntry example/boolean_single.js
299 silly gunzTarPerm extractEntry example/usage-options.js
300 silly gunzTarPerm extractEntry Makefile
301 silly gunzTarPerm extractEntry lib/async.js
302 silly gunzTarPerm extractEntry example/boolean_double.js
303 silly gunzTarPerm extractEntry example/xup.js
304 silly gunzTarPerm extractEntry example/line_count_options.js
305 silly gunzTarPerm extractEntry readme.markdown
306 silly gunzTarPerm extractEntry test/_.js
307 silly gunzTarPerm extractEntry test/parse.js
308 silly gunzTarPerm extractEntry test/usage.js
309 silly gunzTarPerm extractEntry test/_/argv.js
310 silly gunzTarPerm extractEntry test/_/bin.js
311 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf/package.json
312 silly lockFile f574cc5a-dules-serialport-node-modules-sf /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf
313 silly lockFile f574cc5a-dules-serialport-node-modules-sf /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf
314 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async/package.json
315 silly lockFile 40fe865f-me-hhau-npm-sf-0-1-6-package-tgz /home/hhau/.npm/sf/0.1.6/package.tgz
316 silly lockFile 40fe865f-me-hhau-npm-sf-0-1-6-package-tgz /home/hhau/.npm/sf/0.1.6/package.tgz
317 info preinstall sf@0.1.6
318 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf/package.json
319 verbose readDependencies using package.json deps
320 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf/package.json
321 verbose readDependencies using package.json deps
322 silly resolved []
323 verbose about to build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf
324 info build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf
325 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/sf/package.json
326 verbose linkStuff [ false,
326 verbose linkStuff   false,
326 verbose linkStuff   false,
326 verbose linkStuff   '/home/hhau/tco/raspberry-server/node_modules/serialport/node_modules' ]
327 info linkStuff sf@0.1.6
328 verbose linkBins sf@0.1.6
329 verbose linkMans sf@0.1.6
330 verbose rebuildBundles sf@0.1.6
331 silly lockFile bdfa0913-es-serialport-node-modules-async /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async
332 silly lockFile bdfa0913-es-serialport-node-modules-async /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async
333 info install sf@0.1.6
334 silly lockFile 2b212828-hau-npm-async-0-1-18-package-tgz /home/hhau/.npm/async/0.1.18/package.tgz
335 silly lockFile 2b212828-hau-npm-async-0-1-18-package-tgz /home/hhau/.npm/async/0.1.18/package.tgz
336 info postinstall sf@0.1.6
337 info preinstall async@0.1.18
338 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async/package.json
339 verbose readDependencies using package.json deps
340 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async/package.json
341 verbose readDependencies using package.json deps
342 silly resolved []
343 verbose about to build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async
344 info build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async
345 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/async/package.json
346 verbose linkStuff [ false,
346 verbose linkStuff   false,
346 verbose linkStuff   false,
346 verbose linkStuff   '/home/hhau/tco/raspberry-server/node_modules/serialport/node_modules' ]
347 info linkStuff async@0.1.18
348 verbose linkBins async@0.1.18
349 verbose linkMans async@0.1.18
350 verbose rebuildBundles async@0.1.18
351 info install async@0.1.18
352 info postinstall async@0.1.18
353 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/package.json
354 silly lockFile 675579a5-serialport-node-modules-optimist /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist
355 silly lockFile 675579a5-serialport-node-modules-optimist /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist
356 silly lockFile 3312ec71-u-npm-optimist-0-3-7-package-tgz /home/hhau/.npm/optimist/0.3.7/package.tgz
357 silly lockFile 3312ec71-u-npm-optimist-0-3-7-package-tgz /home/hhau/.npm/optimist/0.3.7/package.tgz
358 info preinstall optimist@0.3.7
359 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/package.json
360 verbose readDependencies using package.json deps
361 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/package.json
362 verbose readDependencies using package.json deps
363 verbose cache add [ 'wordwrap@~0.0.2', null ]
364 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
365 verbose parsed url { protocol: null,
365 verbose parsed url   slashes: null,
365 verbose parsed url   auth: null,
365 verbose parsed url   host: null,
365 verbose parsed url   port: null,
365 verbose parsed url   hostname: null,
365 verbose parsed url   hash: null,
365 verbose parsed url   search: null,
365 verbose parsed url   query: null,
365 verbose parsed url   pathname: 'wordwrap@~0.0.2',
365 verbose parsed url   path: 'wordwrap@~0.0.2',
365 verbose parsed url   href: 'wordwrap@~0.0.2' }
366 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
367 verbose parsed url { protocol: null,
367 verbose parsed url   slashes: null,
367 verbose parsed url   auth: null,
367 verbose parsed url   host: null,
367 verbose parsed url   port: null,
367 verbose parsed url   hostname: null,
367 verbose parsed url   hash: null,
367 verbose parsed url   search: null,
367 verbose parsed url   query: null,
367 verbose parsed url   pathname: '~0.0.2',
367 verbose parsed url   path: '~0.0.2',
367 verbose parsed url   href: '~0.0.2' }
368 verbose addNamed [ 'wordwrap', '~0.0.2' ]
369 verbose addNamed [ null, '>=0.0.2- <0.1.0-' ]
370 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
371 verbose lock wordwrap@~0.0.2 /home/hhau/.npm/8bd42136-wordwrap-0-0-2.lock
372 silly addNameRange { name: 'wordwrap', range: '>=0.0.2- <0.1.0-', hasData: false }
373 verbose url raw wordwrap
374 verbose url resolving [ 'https://registry.npmjs.org/', './wordwrap' ]
375 verbose url resolved https://registry.npmjs.org/wordwrap
376 info trying registry request attempt 1 at 13:59:19
377 verbose etag "5YNZ4FJMH5J0NJK59TCZ1M0ZU"
378 http GET https://registry.npmjs.org/wordwrap
379 http 304 https://registry.npmjs.org/wordwrap
380 silly registry.get cb [ 304,
380 silly registry.get   { server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
380 silly registry.get     etag: '"5YNZ4FJMH5J0NJK59TCZ1M0ZU"',
380 silly registry.get     date: 'Wed, 10 Apr 2013 11:59:21 GMT',
380 silly registry.get     'content-length': '0' } ]
381 verbose etag wordwrap from cache
382 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2- <0.1.0-', hasData: true }
383 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2' ] ]
384 verbose addNamed [ 'wordwrap', '0.0.2' ]
385 verbose addNamed [ '0.0.2', '0.0.2' ]
386 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
387 verbose lock wordwrap@0.0.2 /home/hhau/.npm/24a694c8-wordwrap-0-0-2.lock
388 verbose read json /home/hhau/.npm/wordwrap/0.0.2/package/package.json
389 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
390 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
391 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
392 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
393 silly resolved [ { name: 'wordwrap',
393 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
393 silly resolved     version: '0.0.2',
393 silly resolved     repository:
393 silly resolved      { type: 'git',
393 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
393 silly resolved     main: './index.js',
393 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
393 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
393 silly resolved     scripts: { test: 'expresso' },
393 silly resolved     devDependencies: { expresso: '=0.7.x' },
393 silly resolved     engines: { node: '>=0.4.0' },
393 silly resolved     license: 'MIT/X11',
393 silly resolved     author:
393 silly resolved      { name: 'James Halliday',
393 silly resolved        email: 'mail@substack.net',
393 silly resolved        url: 'http://substack.net' },
393 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
393 silly resolved     readmeFilename: 'README.markdown',
393 silly resolved     _id: 'wordwrap@0.0.2',
393 silly resolved     _from: 'wordwrap@~0.0.2' } ]
394 info install wordwrap@0.0.2 into /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist
395 info installOne wordwrap@0.0.2
396 verbose from cache /home/hhau/.npm/wordwrap/0.0.2/package/package.json
397 info /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap unbuild
398 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap/package.json
399 verbose tar unpack /home/hhau/.npm/wordwrap/0.0.2/package.tgz
400 silly lockFile 56d81a2e-s-optimist-node-modules-wordwrap /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap
401 verbose lock /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap /home/hhau/.npm/56d81a2e-s-optimist-node-modules-wordwrap.lock
402 silly lockFile 97f0bf54-u-npm-wordwrap-0-0-2-package-tgz /home/hhau/.npm/wordwrap/0.0.2/package.tgz
403 verbose lock /home/hhau/.npm/wordwrap/0.0.2/package.tgz /home/hhau/.npm/97f0bf54-u-npm-wordwrap-0-0-2-package-tgz.lock
404 silly gunzTarPerm modes [ '755', '644' ]
405 silly gunzTarPerm extractEntry package.json
406 silly gunzTarPerm extractEntry .npmignore
407 silly gunzTarPerm extractEntry index.js
408 silly gunzTarPerm extractEntry README.markdown
409 silly gunzTarPerm extractEntry example/center.js
410 silly gunzTarPerm extractEntry example/meat.js
411 silly gunzTarPerm extractEntry test/break.js
412 silly gunzTarPerm extractEntry test/wrap.js
413 silly gunzTarPerm extractEntry test/idleness.txt
414 verbose read json /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap/package.json
415 silly lockFile 56d81a2e-s-optimist-node-modules-wordwrap /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap
416 silly lockFile 56d81a2e-s-optimist-node-modules-wordwrap /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap
417 silly lockFile 97f0bf54-u-npm-wordwrap-0-0-2-package-tgz /home/hhau/.npm/wordwrap/0.0.2/package.tgz
418 silly lockFile 97f0bf54-u-npm-wordwrap-0-0-2-package-tgz /home/hhau/.npm/wordwrap/0.0.2/package.tgz
419 info preinstall wordwrap@0.0.2
420 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap/package.json
421 verbose readDependencies using package.json deps
422 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap/package.json
423 verbose readDependencies using package.json deps
424 silly resolved []
425 verbose about to build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap
426 info build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap
427 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules/wordwrap/package.json
428 verbose linkStuff [ false,
428 verbose linkStuff   false,
428 verbose linkStuff   false,
428 verbose linkStuff   '/home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/node_modules' ]
429 info linkStuff wordwrap@0.0.2
430 verbose linkBins wordwrap@0.0.2
431 verbose linkMans wordwrap@0.0.2
432 verbose rebuildBundles wordwrap@0.0.2
433 info install wordwrap@0.0.2
434 info postinstall wordwrap@0.0.2
435 verbose about to build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist
436 info build /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist
437 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/node_modules/optimist/package.json
438 verbose linkStuff [ false,
438 verbose linkStuff   false,
438 verbose linkStuff   false,
438 verbose linkStuff   '/home/hhau/tco/raspberry-server/node_modules/serialport/node_modules' ]
439 info linkStuff optimist@0.3.7
440 verbose linkBins optimist@0.3.7
441 verbose linkMans optimist@0.3.7
442 verbose rebuildBundles optimist@0.3.7
443 verbose rebuildBundles [ 'wordwrap' ]
444 info install optimist@0.3.7
445 info postinstall optimist@0.3.7
446 verbose about to build /home/hhau/tco/raspberry-server/node_modules/serialport
447 info build /home/hhau/tco/raspberry-server/node_modules/serialport
448 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/package.json
449 verbose linkStuff [ false,
449 verbose linkStuff   false,
449 verbose linkStuff   false,
449 verbose linkStuff   '/home/hhau/tco/raspberry-server/node_modules' ]
450 info linkStuff serialport@1.1.0
451 verbose linkBins serialport@1.1.0
452 verbose link bins [ { serialportlist: './bin/serialportList.js',
452 verbose link bins     serialportterm: './bin/serialportTerminal.js' },
452 verbose link bins   '/home/hhau/tco/raspberry-server/node_modules/.bin',
452 verbose link bins   false ]
453 verbose linkMans serialport@1.1.0
454 verbose rebuildBundles serialport@1.1.0
455 verbose rebuildBundles [ 'async', 'bindings', 'optimist', 'sf' ]
456 info install serialport@1.1.0
457 verbose unsafe-perm in lifecycle false
458 verbose set uid from=0 to=1000
459 silly exec sh "-c" "node-gyp rebuild"
460 silly sh,-c,node-gyp rebuild,/home/hhau/tco/raspberry-server/node_modules/serialport spawning
461 info serialport@1.1.0 Failed to exec install script
462 info /home/hhau/tco/raspberry-server/node_modules/serialport unbuild
463 verbose from cache /home/hhau/tco/raspberry-server/node_modules/serialport/package.json
464 info preuninstall serialport@1.1.0
465 info uninstall serialport@1.1.0
466 verbose true,/home/hhau/tco/raspberry-server/node_modules,/home/hhau/tco/raspberry-server/node_modules unbuild serialport@1.1.0
467 verbose /home/hhau/tco/raspberry-server/node_modules/.bin,[object Object] binRoot
468 info postuninstall serialport@1.1.0
469 error serialport@1.1.0 install: `node-gyp rebuild`
469 error `sh "-c" "node-gyp rebuild"` failed with 1
470 error Failed at the serialport@1.1.0 install script.
470 error This is most likely a problem with the serialport package,
470 error not with npm itself.
470 error Tell the author that this fails on your system:
470 error     node-gyp rebuild
470 error You can get their info via:
470 error     npm owner ls serialport
470 error There is likely additional logging output above.
471 error System Linux 3.5.0-17-generic
472 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "--production"
473 error cwd /home/hhau/tco/raspberry-server
474 error node -v v0.9.13-pre
475 error npm -v 1.2.14
476 error code ELIFECYCLE
477 verbose exit [ 1, true ]
